/******************************************\|**| Hera_Utilities.h\******************************************/#ifndef kHera_Utilities_h#define kHera_Utilities_h#pragma mark 본INCLUDES본/******************************************\|**| #includes\******************************************/#pragma mark _system includes_/* - system*******************************************/#pragma mark _third party includes_/* - third party libraries*******************************************/#pragma mark _bp libraries includes_/* - bp libraries*******************************************/#include "Hewey.h"#include "Math Special.h"#pragma mark _this library includes_/* - this project*******************************************/#include "Hera_Global.h"#pragma mark 본DEFINITIONS본/******************************************\|**| #defines\******************************************//* - definitions*******************************************/#pragma mark _macros_/* - macros*******************************************/#pragma mark 본TYPEDEFS본/******************************************\|**| typedefs\******************************************/#pragma mark 본PUBLIC PROTOTYPES본/******************************************\|**| public function prototypes\******************************************/OSErr HU_Handle_InsertData( long index, Handle h, Ptr data, long unitSize, long offset);OSErr HU_Handle_DeleteData( long index, Handle h, long unitSize, long offset);OSErr HU_Handle_CopyDataFromResource( long index, long num, Handle h, ResType resType,	short resID, short refNum, long unitSize);OSErr HU_Data_CopyFromHandle( Ptr dest, Handle source, long index, long unitSize);void Resource_Replace( OSType resType, short resID, Handle h, StringPtr defaultName);OSErr HU_Handle_Insert( long start, Handle h, Ptr data, long insertSize);Boolean HU_Data_Is_Identical( Ptr aData, Ptr dData, long dataSize);StringPtr rstring( StringPtr s, short resid, short strnum);void HU_HUIMenu_SetCheckFromBits( huiMasterControlType *master, long layer, long cellx, long celly,	long id, unsigned long bits, long startBit, long endBit);void HU_Menu_SetCheckFromBits( ControlHandle aControl, unsigned long bits, long startBit, long endBit);void HU_UseResFile( short factoryResFile, short *originalResFile);void HU_GetResourceNameFromID( short resID, ResType resType, StringPtr name);OSErr SetControlTextItemSmallFixed( ControlHandle aControl, smallFixedType f);smallFixedType GetControlTextItemSmallFixed( ControlHandle aControl);void ReverseCheckBox( ControlHandle aControl);short HU_GetNewMenuID( void);StringPtr HU_GetOneIndString( heraScenarioFileType *heraFile, short resID,	short stringIndex, StringPtr s);Boolean Generic_ProcessMenuChoiceCommand( unsigned long menuData,		CWindowPtr whichWindow, long dispatchID);Boolean HU_Confirm_Delete( StringPtr deleteString, unsigned short modifiers);Boolean HU_ScenarioFiles_Equal( heraScenarioFileType *file1, heraScenarioFileType *file2);heraScenarioFileType *HU_HeraFile_Get_From_WindowID( long dispatchID);void HU_AutoDefocus( CWindowPtr window);void HU_GenericUpdateEventHandler( WindowPtr whichWindow);void HU_GenericGrowWindow( WindowPtr whichWindow, Point where);#endif kHera_Utilities_h