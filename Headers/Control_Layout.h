/******************************************\|**| Control_Layout.h\******************************************/#ifndef kControl_Layout_h#define kControl_Layout_h#pragma mark 본INCLUDES본/******************************************\|**| #includes\******************************************/#pragma mark _system includes_/* - system*******************************************/#pragma mark _third party includes_/* - third party libraries*******************************************/#pragma mark _bp libraries includes_/* - bp libraries*******************************************/#pragma mark _this library includes_/* - this project*******************************************/#pragma mark 본DEFINITIONS본/******************************************\|**| #defines\******************************************/#define	kCL_MaxCol						16#define	kCL_MaxRow						16#define	kCL_MaxCellControl				32#define	kCL_MaxCellTab					16/* - definitions*******************************************/#pragma mark _macros_/* - macros*******************************************/#pragma mark 본TYPEDEFS본/******************************************\|**| typedefs\******************************************/enum hAlignType { cl_halign_left, cl_halign_center, cl_halign_right};enum vAlignType { cl_valign_top, cl_valign_center, cl_valign_bottom};typedef struct{	long	id;	long	whichTab;} cellControlType;typedef struct{	long		x;	hAlignType	align;} cellTabType;struct controlLayoutType;typedef struct{	hAlignType			hAlign;	vAlignType			vAlign;	controlLayoutType	*controlLayout;	cellControlType		control[kCL_MaxCellControl];	cellTabType			tab[kCL_MaxCellControl];	long				controlNum;	Rect				bounds;} layoutCellType;typedef struct controlLayoutType{	long			colNum;	long			rowNum;	layoutCellType	cell[kCL_MaxCol][kCL_MaxRow];	Rect			bounds;	CWindowPtr		window;	long			currentH;	long			currentV;} controlLayoutType;#pragma mark 본PUBLIC PROTOTYPES본/******************************************\|**| public function prototypes\******************************************/controlLayoutType *CL_Layout_New( void);void CL_Layout_Delete( controlLayoutType *layout);#endif kControl_Layout_h