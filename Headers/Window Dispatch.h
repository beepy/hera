// Window Dispatch.h#ifndef Window_Dispatch_h#define Window_Dispatch_h#define	kWDProcessEventCommand			1#define	kWDCloseWindowCommand			2#define	kWDSaveWindowCommand			3#define	kWDUndoCommand					4#define	kWDCutCommand					5#define	kWDCopyCommand					6#define	kWDPasteCommand					7#define	kWDClearCommand					8#define	kWDProcessMenuChoiceCommand		9#define	kWDQuitCommand					10#define	kWDUserCommandFlag				0x8000#define	kGrowBoxSize						14OSStatus InitWindowDispatch( void);void DisposeWindowDispatch( void);CWindowPtr NewDispatchWindow( Rect *, StringPtr,	Boolean, short, WindowPtr, Boolean,	Boolean (*)(EventRecord *, CWindowPtr, long, long), unsigned long, long *);void CloseDispatchWindow( long);long GetDispatchWindowIDFromWindowPtr( CWindowPtr);CWindowPtr GetWindowPtrFromDispatchWindowID( long);void WindowDispatch_BrindWindowIDToFront( long windowid);unsigned long GetDispatchWindowAdditionalData( long);Handle GetDispatchWindowDataHandle( long);void SetDispatchWindowDataHandle( long, Handle);Boolean DispatchWindowHandleEvent( EventRecord *, unsigned long *menuChoice);Boolean DispatchWindowHandleMenuChoice( short menuID, short menuItem);Boolean DispatchWindowDispatchWDEvent( long);void DispatchWindowSave( long);void DispatchWindow_SetBackgroundNullEvents( long windowid, Boolean wantEvents);WindowPtr WD_FrontWindow( void);#endif Window_Dispatch_h