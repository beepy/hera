/******************************************\|**| Hera_ResourceTracker.h\******************************************/#ifndef kHera_ResourceTracker_h#define kHera_ResourceTracker_h#pragma mark 본INCLUDES본/******************************************\|**| #includes\******************************************/#pragma mark _system includes_/* - system*******************************************/#pragma mark _third party includes_/* - third party libraries*******************************************/#pragma mark _bp libraries includes_/* - bp libraries*******************************************/#pragma mark _this library includes_/* - this project*******************************************/#include "Hera_Global.h"#pragma mark 본DEFINITIONS본/******************************************\|**| #defines\******************************************//* - definitions*******************************************/#define	kHRT_ResourceDifferenceFlag_Data		0x00000001#define	kHRT_ResourceDifferenceFlag_Title		0x00000002#define	kHRT_ResourceDifferenceFlag_ID			0x00000004#define	kHRT_ResourceDifferenceFlag_New			0x00000008#define	kHRT_ResourceDifferenceFlag_AllFlags	0xffffffff#define	kHRT_Resource_ToBeDeleted_ID			(short)0xffff#define	kHRT_Resource_New_ID					(short)0xffff#pragma mark _macros_/* - macros*******************************************/#define	mResOwner_IsFactory( m_i) ( ( (m_i) == gHera->default_spriteFile_refNum) || ( (m_i) == gHera->default_scenarioFile_refNum) || ( (m_i) == gHera->default_interfaceFile_refNum) || ( (m_i) == gHera->default_soundFile_refNum))#define	mResOwner_IsOK( m_i, m_file) (( (m_i) == (m_file)->fileRefNum) || ( (m_i) == gHera->default_spriteFile_refNum) || ( (m_i) == gHera->default_scenarioFile_refNum) || ( (m_i) == gHera->default_interfaceFile_refNum) || ( (m_i) == gHera->default_soundFile_refNum))#pragma mark 본TYPEDEFS본/******************************************\|**| typedefs\******************************************/#pragma mark 본PUBLIC PROTOTYPES본/******************************************\|**| public function prototypes\******************************************/void HRT_AddNewResource( heraScenarioFileType *heraFile,	Handle newData, OSType type, short *id,	StringPtr title);void HRT_DeleteResource( heraScenarioFileType *heraFile,	OSType type, short id);unsigned long HRT_KeepChangedResource( heraScenarioFileType *heraFile,	Handle newResource, OSType type,	short originalResID, short newID, StringPtr newTitle);Boolean HRT_IsIDLegal( heraScenarioFileType *heraFile, OSType type, short theID);Handle HRT_Resource_GetHandle( heraScenarioFileType *heraFile,	OSType type, short theID, short *originalResID,	StringPtr title);Handle HRT_Resource_GetEZ( heraScenarioFileType *heraFile, OSType type,	short id);Handle HRT_Resource_GetHandle_WithOwnerFile( heraScenarioFileType *heraFile,	OSType type, short theID, short *originalID, short *returnHomeResFile,	StringPtr title);Boolean HRT_Resource_GetChanges( heraScenarioFileType *heraFile,	OSType type, short *theID, StringPtr title);newResourceType *HRT_Resource_GetNextNew( heraScenarioFileType *heraFile,	OSType type, newResourceType *newResource, short *resID, StringPtr title);OSErr HRT_WriteAllToDisk( heraScenarioFileType *heraFile);void HRT_Debug_Printout( heraScenarioFileType *heraFile);#endif kHera_ResourceTracker_h