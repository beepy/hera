/******************************************\|**| Hera_Global.h\******************************************/#ifndef kHera_Global_h#define kHera_Global_h#pragma mark 본INCLUDES본/******************************************\|**| #includes\******************************************/#pragma mark _system includes_/* - system*******************************************/#pragma mark _third party includes_/* - third party libraries*******************************************/#pragma mark _bp libraries includes_/* - bp libraries*******************************************/#pragma mark _this library includes_/* - this project*******************************************///#include "Hera_ResourceTracker.h"#include "Window Dispatch.h"// ares#include "Sprite Handling.h"#pragma mark 본DEFINITIONS본/******************************************\|**| #defines\******************************************//* - definitions*******************************************/#define kHera_AppStrResID					8000#define kHera_DefaultMainButtonStrResID		8004#define	kHera_ChooseMainButtonsStrResID		8035#define	kWD_CloseForScenarioOrder_Command	(kWDUserCommandFlag | 1)#define	kWD_Close_ForQuit_Command			(kWDUserCommandFlag | 2)#define	kAppleMenuID						500#define kFileMenuID							501#define	kFile_New_Item						1#define	kFile_Open_Item						2#define	kFile_Close_Window_Item				4#define	kFile_Save_Item						6#define	kFile_Save_As_Item					7#define	kFile_Save_As_Optimized_Item		8#define	kFile_Quit_Item						10// C5CM3524 -- DSL confirmation #?#define	kEditMenuID				502#define	kEdit_Undo_Item			1#define	kEdit_Cut_Item			3#define	kEdit_Copy_Item			4#define	kEdit_Paste_Item		5#define	kEdit_Clear_Item		6#define	kEdit_Select_All_Item	7#define	kEdit_Add_Item			9#define	kEdit_Delete_Item		10#define	kEdit_Delete_All_Item	12#define	kMax_Open_Files			16#define	kHera_Null_Update_Time	180	// 3 seconds#pragma mark _macros_/* - macros*******************************************/#pragma mark 본TYPEDEFS본/******************************************\|**| typedefs\******************************************/typedef struct newResourceType{	Handle							resource;		// nil if to be deleted	short							resID;			// 0xffff if to be deleted	short							originalResID;	// 0xffff if new	short							ownerRefNum;	newResourceType					*next;	newResourceType					*previous;	Str255							title;	OSType							type;} newResourceType;typedef struct heraUserPrefsType{	Boolean		firstLaunch;} heraUserPrefsType;typedef struct heraScenarioFileType{	FSSpec					fileSpec;	short					fileRefNum;	Handle					discreteData;	long					conditionID;	long					actionID;	long					initialID;	long					objectID;	long					briefPointID;	Handle					scenarioData;	// actual scenarios	Handle					scenarioInfo;	// info about scenario file	newResourceType			*newResource;	long					dragTo;	long					dragFrom;	Handle					callBack_conditionData;	Handle					callBack_baseObjectData;	Handle					callBack_initialData;	Handle					callBack_actionData;	Handle					callBack_briefPointData;	Boolean					changed;} heraScenarioFileType;typedef struct heraClipboardType{	OSType					type;	long					dataID;	long					dataRange;	heraScenarioFileType	*sourceFile;	Handle					sourceData;} heraClipboardType;typedef struct heraGlobalType{	Boolean					inBackground;	short					prefRefNum;	short					default_spriteFile_refNum;	short					default_scenarioFile_refNum;	short					default_interfaceFile_refNum;	short					default_soundFile_refNum;//	short					userDataFile_refNum;	long					bigFontNum;	long					bigFontStyle;	long					bigFontSize;	long					smallFontNum;	long					smallFontStyle;	long					smallFontSize;	long					smallFontBoldStyle;	heraUserPrefsType		userPrefs;	long					modalMode;	CTabHandle				theCLUT;	long					scaleHMap[MAX_PIX_SIZE];	long					scaleVMap[MAX_PIX_SIZE];	heraScenarioFileType	factory;	heraClipboardType		clipboard;	Boolean					wantToQuit;	heraScenarioFileType	*heraFile[kMax_Open_Files];	heraScenarioFileType	*currentSave;	long					lastNullUpdate;//	Handle				discreteData;//	long				conditionID;//	long				actionID;//	long				initialID;//	long				objectID;//	long				briefPointID;//	Handle				scenarioData;	// actual scenarios//	Handle				scenarioInfo;	// info about scenario file//	newResourceType		*newResource;//	long				dragTo;//	long				dragFrom;} heraGlobalType;#pragma mark 본PUBLIC PROTOTYPES본/******************************************\|**| public function prototypes\******************************************/#endif kHera_Global_h